apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.protobuf'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion versions.targetSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.versionCode
        versionName versions.versionName
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
        setProperty("archivesBaseName", "common-$versionName")
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), '../proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$versions.protoc"
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:$versions.protoc"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java", "${protobuf.generatedFilesBaseDir}/main/java"]
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    /* Kotlin */
    implementation "androidx.core:core-ktx:$versions.core_ktx"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin"

    /* Desugaring */
    api "androidx.multidex:multidex:$versions.multidex"
    api "androidx.legacy:legacy-support-v4:$versions.legacy_support"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$versions.desugar"

    /* DI */
    api "com.google.dagger:hilt-android:$versions.hilt"
    kapt "com.google.dagger:hilt-android-compiler:$versions.hilt"

    /* UI */
    api "androidx.activity:activity-ktx:$versions.activity_ktx"
    api "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
    api "com.google.android.material:material:$versions.material"
    api "androidx.preference:preference-ktx:$versions.preference"
    api "com.github.jonapoul:colorpicker:$versions.colorpicker"
    api "com.leinardi.android:speed-dial:$versions.android_speed_dial"
    api "com.nbsp:materialfilepicker:$versions.materialfilepicker"
    api "pub.devrel:easypermissions:$versions.easypermissions"
    api "androidx.recyclerview:recyclerview:$versions.recyclerview"

    /* Lifecycle */
    api "androidx.lifecycle:lifecycle-extensions:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-common-java8:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$versions.lifecycle"
    kapt "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle"

    /* Room Database */
    api "androidx.room:room-runtime:$versions.room"
    implementation "androidx.room:room-rxjava2:$versions.room"
    kapt "androidx.room:room-compiler:$versions.room"
    testImplementation "androidx.room:room-testing:$versions.room"

    /* Networking */
    api "io.reactivex.rxjava2:rxjava:$versions.rxjava"
    api "io.reactivex.rxjava2:rxandroid:$versions.rxandroid"
    api "com.squareup.retrofit2:retrofit:$versions.retrofit"
    api "com.squareup.retrofit2:converter-gson:$versions.retrofit"
    api "com.squareup.retrofit2:adapter-rxjava2:$versions.retrofit"

    /* Navigation */
    api "androidx.navigation:navigation-fragment-ktx:$versions.navigation"
    api "androidx.navigation:navigation-ui-ktx:$versions.navigation"

    /* Logging */
    api "com.jakewharton.timber:timber:$versions.timber"
    implementation "org.slf4j:slf4j-api:$versions.slf4j"
    implementation "com.github.tony19:logback-android:$versions.logback_android"

    /* Utils */
    api "com.android.support:multidex:$versions.multidex"
    api "com.rugovit.eventlivedata:eventlivedata:$versions.eventlivedata"
    implementation "com.github.jonapoul:geodesy:$versions.geodesy"
    api "com.github.jonapoul:sharedprefs:$versions.sharedprefs"
    api "com.google.android.gms:play-services-location:$versions.play_services_location"
    api "com.google.protobuf:protobuf-lite:$versions.protobuf_lite"

    /* Testing */
    testImplementation "junit:junit:$versions.junit"
    testImplementation "io.mockk:mockk:$versions.mockk"
    testImplementation "org.hamcrest:hamcrest:$versions.hamcrest"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidx_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}
